{"version":3,"sources":["reducers/loginVRM.js","constants/testLoginPass.js","components/login-field.js","components/showOnlogin.js","reducers/installationsVRM.js","reducers/installationsObjectData.js","models/apiVRM.js","containers/login.js","components/installations-list.js","reducers/selectedInst.js","containers/installations.js","components/mainMenu.js","reducers/mouseCoordinates.js","reducers/newDashboardElement.js","components/constructorElement.js","components/widgetFrame.js","components/dashboardInConstructor.js","reducers/newDashboard.js","containers/constructorField.js","reducers/currentWidgetSize.js","containers/widgetSizeFrame.js","reducers/dashboards.js","reducers/dashboardName.js","containers/constructor.js","containers/dashboard.js","reducers/hideMainMenu.js","reducers/readLocalSrorage.js","App.js","serviceWorker.js","reducers/index.js","store/middlewares.js","containers/localStorageReadWrite.js","index.js","store/index.js"],"names":["SET_TOKEN","setIsntLogin","createAction","setToken","initialState","islogin","username","idUser","headerWithToken","login","pass","handleActions","_handleActions","Object","defineProperty","state","_ref","payload","_ref2","objectSpread","isLoginSelector","passInput","React","createRef","LoginField","onChangeLoginPass","isLogin","loginRequest","react_default","a","createElement","TextField","autoFocus","placeholder","onChange","value","target","onKeyDown","e","keyCode","current","focus","inputRef","type","_ref3","Button","variant","color","onClick","ShowOnLogin","logout","concat","SET_INSTALLATIONS","setInstallations","data","success","installationsSelector","SET_DATA","setInstallationObjectData","instDataObjectSelector","targetUrl","authApi","formURL","action","getInstallations","urlKey","afterFunc","dispatch","axios","method","url","headers","then","response","error","console","log","CreateInstallationsDataObject","installationResponse","records","newDataObj","map","params","siteName","name","extended","idDataAttribute","code","description","formattedValue","idSite","updateTimerId","updateInstallations","time","arguments","length","undefined","setTimeout","setInterval","Login","_this$props","this","props","className","login_field","showOnlogin","Component","mapDispatchToProps","loginPass","status","X-Authorization","token","connect","buttonText","site","date","Date","last_timestamp","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","alarm","dataFilterParams","dataFilterEnergie","SmallSiteData","filter","elem","indexOf","energie","key","ButtonForSite","selectInst","selectedInst","disabled","installations_list_SmallSiteData","InstallationList","installationResponce","installations_list_ButtonForSite","setInst","installationSelector","Installations","clearInterval","clearTimeout","react_router","push","to","installations_list","MainMenu","dashboards","hide","toggleHide","setDashboardName","clearNewDashboard","clearWidgetSize","onMouseLeave","react_router_dom","dashboard","id","setCoord","in","X","Y","dragX","dragY","mouseCoordSelector","setElement","clearElement","param","newDashboardElement_handleActions","newElementSelector","ConstructorElement","element","setMouseCoordinate","setNewElement","deleteElement","newDashboard","editElement","instDataObject","style","position","left","top","onMouseMove","ev","clientX","clientY","currentTarget","parentElement","getBoundingClientRect","cursor","onMouseDown","button","IconButton","newName","prompt","Edit_default","alert","Info_default","window","confirm","Close_default","WidgetFrame","size","setTargetWidget","children","width","W","height","H","borderWidth","borderStyle","borderColor","onMouseEnter","backgroundColor","right","bottom","background","display","zIndex","DashboardInConstructor","delete","setElemToNewDashboard","setNewDashboard","editElemInNewDashboard","deleteElemInNewDashboard","newDashboard_handleActions","toConsumableArray","_ref4","newState","_ref5","newDashboardSelector","LevitateElement","newElement","coord","setToNewDashboard","newElementInitialState","onMouseUp","ConstructorField","REDUCER_NAME","setWidgetSize","resizeX","resizeY","move","currentWidgetSize_handleActions","useDispatch","useSelector","currentWidgetSize","saveToNewDashboard","preventDefault","dX","dY","currentSizeX","currentSizeY","setDashboard","loadDashboards","deleteDashboard","dashboards_handleActions","dashboardsSelector","clearDashboardName","dashboardName_handleActions","dashboardNameSelector","InitialWidget","Constructor","upperDiv","urlParam","queryString","parse","location","search","valid","offsetLeft","offsetTop","_this2","dashboardName","Select","native","inputProps","input","OutlinedInput","hidden","paramName","dataArray","elementTargetParamSet","marginLeft","ref","constructorField","widgetSizeFrame_WidgetFrame","filterNewDashboard","Dashboard","_this","history","mapDispathToProps","installationsResponce","toggleMainMenu","hideMainMenuSelector","readLocalStorage","mainTheme","createMuiTheme","palette","primary","lightBlue","secondary","orange","Page404","App","rawloginVRM","localStorage","getItem","rawInst","rawDashboards","rawinstallationsObjectData","setIsLogin","JSON","setDashboards","hideMainMenu","ThemeProvider","theme","basename","exact","path","component","mapDispatchtoProps","Boolean","hostname","match","reducers","loginVRM","installationsVRM","installationsObjectData","mouseCoordinates","newDashboardElement","filterToLocalStorageLog","_filterToLocalStorage","actionsToLocalStorage","logToLocalStorage","next","returnValue","getState","stringify","setItem","takeFromLocalStorage","createMiddlewares","Thunk","__webpack_require__","d","__webpack_exports__","store","middlewares","createStore","combineReducers","applyMiddleware","apply","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfa464ce.chunk.js","sourcesContent":["import {handleActions, createAction} from \"redux-actions\";\r\nimport {testLogin, testPass} from \"../constants/testLoginPass\";\r\n\r\nexport const SET_ISNTLOGIN = \"LOGIN_VRM/SET_ISNTLOGIN\";\r\nexport const SET_TOKEN = \"LOGIN_VRM/SET_TOKEN\";\r\n\r\nconst REDUCER_NAME = \"loginVRM\";\r\n\r\nexport const setIsntLogin = createAction(SET_ISNTLOGIN);\r\nexport const setToken = createAction(SET_TOKEN);\r\n\r\n\r\nconst initialState = {islogin: false, username: \"\", idUser: null, headerWithToken: {}, login : testLogin || \"\" , pass : testPass || \"\" };\r\n\r\n\r\nexport default handleActions({\r\n    [setIsntLogin] : (state, { payload }) =>  initialState,\r\n    [setToken] : (state, { payload }) => ({ ...state, ...payload }),\r\n}, initialState);\r\n\r\nexport const isLoginSelector = state => state[REDUCER_NAME];\r\n","export const testLogin = '175.com.ua@gmail.com';\r\nexport const testPass = 'Ww9TArkV!dndv53';\r\n","import React from \"react\";\r\n\r\n// import { getLoginRequest,  } from \"../containers/apiVRM\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\n\r\nconst loginPlaceholder = \"login or email:\";\r\nconst parolPlaceholder = \"password\";\r\nconst buttonText = \"Login\"\r\n\r\n\r\nconst passInput = React.createRef();\r\n\r\nconst LoginField = ({ onChangeLoginPass, isLogin, loginRequest }) => {\r\n    if (isLogin.islogin) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <TextField\r\n                autoFocus = {true}\r\n                placeholder={loginPlaceholder} \r\n                onChange={({target: { value }}) => onChangeLoginPass({ login: value })} \r\n                onKeyDown={ e => {\r\n                    if (e.keyCode === 13) {\r\n                        passInput.current.focus();\r\n                    }\r\n                }}\r\n                value={isLogin.login} />\r\n            </div>\r\n           <div>\r\n                <TextField\r\n                inputRef = {passInput}\r\n                type=\"password\"\r\n                placeholder={parolPlaceholder}\r\n                onChange={({target: { value }}) => onChangeLoginPass({ pass: value })}\r\n                onKeyDown={ e => {\r\n                    if (e.keyCode === 13) {\r\n                        loginRequest(isLogin);\r\n                        // getLoginRequest()\r\n                    }\r\n                }} \r\n                value={isLogin.pass} />\r\n           </div>\r\n            <div>\r\n                <Button\r\n                variant={'outlined'}\r\n                color=\"secondary\"\r\n                onClick={() => loginRequest(isLogin) }\r\n                >{buttonText}</Button>\r\n            </div>   \r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default LoginField;\r\n\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\nconst ShowOnLogin = ({ isLogin, logout }) => {\r\n    if (isLogin.islogin) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {`login as: ${isLogin.username}`}\r\n                </div>\r\n                <div>\r\n                    <Button \r\n                    color=\"secondary\" \r\n                    onClick={() => {\r\n                        logout();\r\n                    }}>Exit</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n};\r\n\r\nexport default ShowOnLogin;\r\n","import {handleActions, createAction} from \"redux-actions\";\r\n\r\nexport const SET_INSTALLATIONS = \"INSTALLATIONS_VRM/SET_INSTALLATIONS\";\r\n\r\nconst REDUCER_NAME = \"installationsVRM\";\r\n\r\nexport const setInstallations = createAction(SET_INSTALLATIONS);\r\n\r\n\r\nconst initialState = {data: {success: false}};\r\n\r\n\r\nexport default handleActions({\r\n    [setInstallations] : (state, { payload }) => ({...payload}) ,\r\n}, initialState);\r\n\r\nexport const installationsSelector = state => state[REDUCER_NAME];\r\n","import {handleActions, createAction} from \"redux-actions\";\r\n\r\nexport const SET_DATA = \"INSTALLATIONS_OBJECT_DATA/SET_DATA\";\r\n\r\nconst REDUCER_NAME = \"installationsObjectData\";\r\n\r\nexport const setInstallationObjectData = createAction(SET_DATA);\r\n\r\nconst initialState = {};\r\n\r\nexport default handleActions({\r\n    [setInstallationObjectData] : (state, { payload }) => ({...payload}),\r\n}, initialState);\r\n\r\nexport const instDataObjectSelector = state => state[REDUCER_NAME];\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { setToken } from \"../reducers/loginVRM\";\r\nimport { setInstallations } from \"../reducers/installationsVRM\";\r\nimport { setInstallationObjectData } from \"../reducers/installationsObjectData\";\r\n\r\n\r\n//APIs\r\n\r\nconst targetUrl = \"https://vrmapi.victronenergy.com\";\r\nconst authApi = \"/v2/auth/login\";\r\n\r\nexport function formInstallationsApi(idUser){\r\n    return `${targetUrl}/v2/users/${idUser}/installations?extended=1`;\r\n}\r\n\r\n// function formInstallationOwerviewApi(idSite){\r\n//     return `${targetUrl}/v2/installations/${idSite}/system-overview`;\r\n// }\r\n\r\n\r\nexport const getInstallations = FormRequestToVRM(formInstallationsApi, setInstallations);\r\n\r\n// export const getInstallationData = FormRequestToVRM(formInstallationOwerviewApi, )\r\n\r\n\r\nfunction FormRequestToVRM(formURL, action) {\r\n    return (urlKey, headerWithToken, afterFunc) => {\r\n        return function(dispatch) {\r\n            axios({\r\n                method:'get',\r\n                url: formURL(urlKey),\r\n                headers: headerWithToken\r\n            })\r\n            .then(\r\n                response => {\r\n                    dispatch(action(response));\r\n                    dispatch(afterFunc(response));\r\n                },\r\n                error => console.log(error)\r\n            )\r\n        };\r\n    }\r\n};\r\n\r\n\r\n\r\nexport function getLoginRequest(loginPass){\r\n    return function(dispatch) {\r\n        axios({\r\n                method:'post',\r\n                url: targetUrl + authApi,\r\n                data: `{\"username\": \"${loginPass.login}\", \"password\": \"${loginPass.pass}\"}`\r\n        })\r\n        .then( response => {\r\n                if (response.status === 200){\r\n                    const headerWithToken = {'X-Authorization' : 'Bearer ' + response.data.token};\r\n                    const idUser = response.data.idUser;\r\n                    const isLogin = {\r\n                        islogin: true,\r\n                        username: loginPass.login,\r\n                        idUser: idUser,\r\n                        headerWithToken\r\n                    };\r\n                    dispatch(setToken(isLogin));\r\n                    dispatch(getInstallations(isLogin.idUser, isLogin.headerWithToken, \r\n                        CreateInstallationsDataObject));\r\n                }\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                return null;\r\n            }\r\n        );\r\n    };\r\n};\r\n\r\n\r\nexport function CreateInstallationsDataObject(installationResponse) {\r\n    return function(dispatch) {\r\n        if (installationResponse.data && installationResponse.data.records) {\r\n            const newDataObj = {};\r\n            installationResponse.data.records.map((e) => {\r\n                const params = {siteName: e.name};\r\n                e.extended.map((data) => {\r\n                    params[data.idDataAttribute || data.code] = { name: data.description, value: data.formattedValue};\r\n                    return null;\r\n                });\r\n                newDataObj[e.idSite] = params;\r\n                return null;\r\n            });\r\n            dispatch(setInstallationObjectData(newDataObj));\r\n            return newDataObj;\r\n        }\r\n        return null;\r\n    }; \r\n};\r\n\r\n\r\nexport let updateTimerId = null;\r\n\r\nexport function updateInstallations(isLogin, time=10000){\r\n    return function(dispatch) {\r\n        updateTimerId = setTimeout(() => {\r\n            updateTimerId = setInterval(() => {\r\n                // console.log(updateTimerId);\r\n                if (isLogin.islogin) {\r\n                    // console.log('===  auto request ===');\r\n                    dispatch(getInstallations(isLogin.idUser, isLogin.headerWithToken, \r\n                        CreateInstallationsDataObject));\r\n                }\r\n            }, time);\r\n        }, time);\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setIsntLogin, isLoginSelector, setToken } from \"../reducers/loginVRM\";\r\nimport LoginField from \"../components/login-field\";\r\nimport ShowOnLogin from \"../components/showOnlogin\";\r\n// import { setInstallationObjectData } from \"../reducers/installationsObjectData\";\r\n\r\nimport { getLoginRequest,  } from \"../models/apiVRM\";\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        const { onChangeLoginPass, isLogin, logout, loginRequest } = this.props; \r\n        return(\r\n            <div className=\"login\">\r\n                <LoginField \r\n                onChangeLoginPass={onChangeLoginPass}\r\n                isLogin={isLogin}\r\n                logout={logout}\r\n                loginRequest={loginRequest} />\r\n                <div>\r\n                    <ShowOnLogin \r\n                    isLogin={isLogin}\r\n                    logout={logout} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes ={\r\n    onChangeLoginPass: PropTypes.func,\r\n    isLogin: PropTypes.object,\r\n    logout: PropTypes.func,\r\n    // setInstallationObjectData: PropTypes.func,\r\n    loginRequest: PropTypes.func\r\n}\r\n\r\nconst mapDispatchToProps = ({\r\n    onChangeLoginPass: setToken,\r\n    // onChangeParol: setParol,\r\n    logout: setIsntLogin,\r\n    // setInstallationObjectData: setInstallationObjectData,\r\n    loginRequest: getLoginRequest,\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    isLogin: isLoginSelector(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst buttonText = (site) => {\r\n    const date = new Date(site.last_timestamp * 1000);\r\n    const year = date.getFullYear();\r\n    const month = ((date.getMonth()+1) > 9)? date.getMonth() + 1: \"0\" + (date.getMonth() + 1);\r\n    const day = (date.getDate() > 9)? date.getDate(): \"0\" + date.getDate();\r\n    const hour = (date.getHours() > 9)? date.getHours(): \"0\" + date.getHours();\r\n    const minute = (date.getMinutes() > 9)? date.getMinutes(): \"0\" + date.getMinutes();\r\n\r\n    if (site.alarm === true ) {\r\n        return `${site.name} ( last connect: ${hour}:${minute} ${day}.${month}.${year} ) !alarm!`;\r\n    }\r\n    return `${site.name} ( last connect: ${hour}:${minute} ${day}.${month}.${year} )`;\r\n};\r\n    \r\nconst dataFilterParams = [143, 215];\r\nconst dataFilterEnergie = [\"consumption\", \"solar_yield\", \"from_to_grid\"];\r\n\r\nconst SmallSiteData = ({ extended }) => {\r\n    const params = extended.filter(elem => (dataFilterParams.indexOf(elem.idDataAttribute) !== -1));\r\n    const energie = (extended.filter(elem => (dataFilterEnergie.indexOf(elem.code) !== -1)));\r\n    const data = params.concat(energie);\r\n    return (\r\n        <div className=\"small-site-data\">\r\n            {data.map((data) => (\r\n                <div key={data.idDataAttribute || data.code}>{data.description} {data.formattedValue}</div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ButtonForSite = ({ site, selectInst, selectedInst, isLogin }) => {\r\n    if (site.idSite === selectedInst) {\r\n        return (\r\n            <div> \r\n            <Button\r\n                color=\"primary\"\r\n                disabled\r\n            >{buttonText(site)}</Button>\r\n            <SmallSiteData\r\n            extended={site.extended} />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n        <Button\r\n            color=\"primary\" \r\n            onClick={() => {\r\n                selectInst(site.idSite);\r\n            }}\r\n        >{buttonText(site)}</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst InstallationList = ({ installationResponce, selectInst, selectedInst, isLogin }) => {\r\n    if (installationResponce){\r\n        if (installationResponce.data.success) {\r\n            return (\r\n                <div className=\"installation-menu\">\r\n                {installationResponce.data.records.map((site) => (\r\n                    <div key={site.idSite}>\r\n                        <ButtonForSite\r\n                        site={site}\r\n                        selectInst={selectInst}\r\n                        selectedInst={selectedInst}\r\n                        isLogin={isLogin} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n                \r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>Can`t receive installations list</div>\r\n    );\r\n};\r\n\r\nexport default InstallationList;\r\n","\r\nimport { handleActions, createAction} from \"redux-actions\";\r\n\r\n\r\nconst SET_INST = 'SELECTED_INST/SET_INST';\r\n\r\nconst REDUCER_NAME = 'selectedInst';\r\n\r\nexport const setInst = createAction(SET_INST);\r\n\r\nconst initialState = null;\r\n\r\nexport default handleActions({\r\n    [setInst]: (state, {payload}) => (payload),\r\n}, initialState);\r\n\r\nexport const installationSelector = state => state[REDUCER_NAME];\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { isLoginSelector } from \"../reducers/loginVRM\";\r\nimport InstallationList from \"../components/installations-list\";\r\nimport { setInst, installationSelector } from \"../reducers/selectedInst\";\r\n// import InstallationDetails from \"./installationDetails\";\r\nimport { installationsSelector, setInstallations } from \"../reducers/installationsVRM\";\r\nimport { updateTimerId, updateInstallations } from \"../models/apiVRM\";\r\nimport { setInstallationObjectData } from \"../reducers/installationsObjectData\";\r\n\r\n\r\n\r\n\r\nclass Installations extends React.Component {\r\n    \r\n    componentWillUnmount(){\r\n        clearInterval(updateTimerId);\r\n        clearTimeout(updateTimerId);\r\n    };\r\n\r\n    componentWillMount(){\r\n        this.props.updateInstallations(this.props.isLogin, 20000);\r\n    };\r\n\r\n    render(){\r\n        const { isLogin, installationResponce, selectInst, selectedInst } = this.props;\r\n\r\n        if (!isLogin.islogin) {\r\n            return (\r\n                <div className=\"inner-warning\">Please login first!</div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"installations\">\r\n                <Redirect push to=\"/sites\" />\r\n                <InstallationList \r\n                installationResponce={installationResponce}\r\n                selectInst={selectInst} \r\n                selectedInst={selectedInst}\r\n                isLogin={isLogin} />\r\n                {/* <InstallationDetails /> */}\r\n            </div>\r\n        )\r\n        \r\n    };\r\n};\r\n\r\nInstallations.propTypes = {\r\n    isLogin: PropTypes.object,\r\n    installationResponce: PropTypes.object,\r\n    selectInst: PropTypes.func,\r\n    selectedInst: PropTypes.number,\r\n    setInstallations: PropTypes.func,\r\n    setInstallationObjectData: PropTypes.func,\r\n    updateInstallations: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isLogin: isLoginSelector(state),\r\n    installationResponce: installationsSelector(state),\r\n    selectedInst: installationSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    selectInst: setInst,\r\n    setInstallations: setInstallations, \r\n    setInstallationObjectData: setInstallationObjectData,\r\n    updateInstallations: updateInstallations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Installations);\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\n\r\nexport function MainMenu({ dashboards, hide, toggleHide,\r\n    setDashboardName, clearNewDashboard, clearWidgetSize }) {\r\n    if (hide) {\r\n        return (\r\n            <div className='main-menu-conteiner'>\r\n                <Button \r\n                variant={'outlined'}\r\n                color=\"primary\"\r\n                className=\"main-menu-button\"\r\n                onClick={toggleHide}>\r\n                    Menu\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div\r\n        className='main-menu-conteiner'\r\n        onMouseLeave={toggleHide}>\r\n            <Button \r\n            variant={'outlined'}\r\n            color=\"primary\"\r\n            className=\"main-menu-button\"\r\n            onClick={toggleHide}>\r\n                Menu\r\n            </Button>\r\n            <div className=\"main-menu\">\r\n                <Link \r\n                to=\"/sites\" \r\n                onClick={toggleHide}>\r\n                    <div className=\"main-menu-base-elem\">\r\n                        Go to main\r\n                    </div>\r\n                </Link>       \r\n                {dashboards.map( (dashboard, id) => {\r\n                    if (dashboard) {    \r\n                        return (\r\n                            <Link \r\n                            key={id}\r\n                            to={`/dashboards/?id=${dashboard.id}`} \r\n                            onClick={toggleHide}>\r\n                                <div className=\"main-menu-elem\">\r\n                                    {dashboard.name}\r\n                                </div>\r\n                            </Link>     \r\n                        );\r\n                    }\r\n                    return null;\r\n                })}\r\n                <Link \r\n                to=\"/newdashboard\" \r\n                onClick={() => {\r\n                    toggleHide();\r\n                    setDashboardName(`Dashboard #${dashboards.length}`);\r\n                    clearNewDashboard();\r\n                    clearWidgetSize();\r\n                }}>\r\n                    <div className=\"main-menu-base-elem\">\r\n                        Create new dashboard\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","\r\nimport { handleActions, createAction} from \"redux-actions\";\r\n\r\n\r\nconst SET_COORD = 'MOUSE_COORD/SET_COORD';\r\n\r\nconst REDUCER_NAME = 'mouseCoordinates';\r\n\r\nexport const setCoord = createAction(SET_COORD);\r\n\r\nconst initialState = {in:true, X: 0, Y: 0, dragX: 0, dragY: 0};\r\n\r\nexport default handleActions({\r\n    [setCoord]: (state, { payload }) => ({...state, ...payload}),\r\n}, initialState);\r\n\r\nexport const mouseCoordSelector = state => state[REDUCER_NAME];\r\n","import { handleActions, createAction} from \"redux-actions\";\r\n\r\n\r\nconst SET_ELEMENT = 'NEW_ELEMENT/SET_ELEMENT';\r\nconst CLEAR_ELEMENT = 'NEW_ELEMENT/CLEAR_ELEMENT';\r\n\r\nconst REDUCER_NAME = 'newDashboardElement';\r\n\r\nexport const setElement = createAction(SET_ELEMENT);\r\nexport const clearElement = createAction(CLEAR_ELEMENT);\r\n\r\nexport const initialState = { type: 'param', idSite:\"-\", param: \"-\" };\r\n\r\nexport default handleActions({\r\n    [setElement]: (state, { payload }) => ({ ...state, ...payload}),\r\n    [clearElement]: (state, { payload }) => initialState,\r\n}, initialState);\r\n\r\nexport const newElementSelector = state => state[REDUCER_NAME];\r\n","import React from \"react\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\n\r\nexport default function ConstructorElement ({ element, setMouseCoordinate, setNewElement, deleteElement,\r\n    newDashboard, editElement, instDataObject, id }) {\r\n\r\n    if (!element) {\r\n        return null;\r\n    }\r\n\r\n    return(\r\n        <div className=\"constructor-element\"\r\n        style={{position: 'absolute', left: element.X, top: element.Y}}\r\n        key={id}\r\n        onMouseMove={(ev) => {\r\n            setMouseCoordinate({\r\n                X: ev.clientX,\r\n                Y: ev.clientY - ev.currentTarget.parentElement.getBoundingClientRect().top\r\n            });\r\n        }}>\r\n            <div\r\n            style={{cursor: 'move'}}\r\n            className='text-elem-dashboard-constructor-div'\r\n            onMouseDown={(ev) => {\r\n                if (ev.button === 0) {\r\n                    setMouseCoordinate({\r\n                        dragX: ev.clientX - ev.currentTarget.getBoundingClientRect().left,\r\n                        dragY: ev.clientY - ev.currentTarget.getBoundingClientRect().top\r\n                    });\r\n                    setNewElement(newDashboard[id].element);\r\n                    deleteElement(id);\r\n                }\r\n            }}>\r\n                {`${element.element.name} : ${element.element.value}`}  \r\n            </div>\r\n            <div>\r\n                <IconButton\r\n                className='edit-elem-button'\r\n                onClick={() => {\r\n                    const newName = prompt(\"Monitor name:\", element.element.name);\r\n                    if (newName) {\r\n                        editElement({ id: id, element: { name: newName}})\r\n                    }\r\n                }}>\r\n                    <EditIcon />\r\n                </IconButton >\r\n            </div>\r\n            <div>\r\n                <IconButton \r\n                className='info-elem-button'\r\n                onClick={() => {\r\n                    // console.log(element);\r\n                    alert(`\r\n                    monitor name: ${element.element.name}\r\n                    site: ${instDataObject[element.element.idSite].siteName}\r\n                    parameter: ${instDataObject[element.element.idSite][element.element.param].name}\r\n                    value example: ${instDataObject[element.element.idSite][element.element.param].value}`)}}>\r\n                    <InfoIcon />\r\n                </IconButton>\r\n            </div>\r\n            <div>\r\n                <IconButton \r\n                className='delete-elem-button'\r\n                onClick={() => {\r\n                    const confirm = window.confirm('Do You want delete element?');\r\n                    if (confirm) {\r\n                        deleteElement(id);\r\n                    }\r\n                }}>\r\n                    <Close />\r\n                </IconButton>\r\n            </div>   \r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\n\r\n\r\nexport default function WidgetFrame({ size, setTargetWidget, id, deleteElement, \r\n    clearWidgetSize, children }) {\r\n    return (\r\n        <div \r\n        className='widget-outer-div'\r\n        style={{\r\n            position: 'absolute', \r\n            left: size.X,\r\n            top: size.Y,\r\n            width: `${size.W}px`,\r\n            height:`${size.H}px`,\r\n            borderWidth: '1px',\r\n            borderStyle: 'solid',\r\n            borderColor: 'rgb(0,0,0)',\r\n        }}\r\n        onMouseEnter={(ev) => {\r\n            // console.log('=== mouse enter ===');\r\n            setTargetWidget({ id: id });\r\n            setTargetWidget(size);\r\n        }}\r\n        >\r\n            <div \r\n            className='widget-content-div'\r\n            style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                top: '24px',\r\n                \r\n                backgroundColor: '#ffff',\r\n                cursor: 'crosshair',\r\n            }}>\r\n                {children}\r\n            </div>\r\n\r\n            <div \r\n            className='top-widget-div'\r\n            style={{\r\n                position: 'absolute',\r\n                right: 0,\r\n                top: '0px',\r\n                height: '24px',\r\n                width: '100%',\r\n                cursor: 'move',\r\n            }}>\r\n            </div>\r\n            <div \r\n            className='bottom-right-corner-widget-div'\r\n            style={{\r\n                position: 'absolute',\r\n                right: '-5px',\r\n                bottom: '-5px',\r\n                height: '10px',\r\n                width: '10px',\r\n                cursor: 'nwse-resize'\r\n            }}>\r\n                <div\r\n                style={{\r\n                    position: 'absolute',\r\n                    bottom: '50%',\r\n                    right: '50%',\r\n                    height: '5px',\r\n                    width: '5px',\r\n                    background: 'linear-gradient(to bottom right, rgba(0,0,0,0) 50%, rgba(0,0,0,0) 5%, rgba(0,0,0,1) 45%'\r\n                }}></div>\r\n            </div>\r\n            <div \r\n            className='widget-top-left-buttons-div'\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                right: 0,\r\n                display: 'flex',\r\n                zIndex: 1000\r\n            }}>\r\n                <div>\r\n                    <IconButton>\r\n                         <EditIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div>\r\n                    <IconButton>\r\n                        <InfoIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div>\r\n                    <IconButton\r\n                    className='delete-elem-button'\r\n                    onClick={() => {\r\n                        const confirm = window.confirm('Do You want delete element?');\r\n                        if (confirm) {\r\n                            deleteElement(id);\r\n                            clearWidgetSize();\r\n                        }\r\n                    }}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport ConstructorElement from \"./constructorElement\";\r\nimport WidgetFrame from \"./widgetFrame\";\r\n\r\n\r\n\r\n\r\nexport default function DashboardInConstructor({ newDashboard, editElement, deleteElement, \r\n    setMouseCoordinate, setNewElement, instDataObject, setTargetWidget, clearWidgetSize }) {\r\nreturn (\r\n<div \r\nclassName=\"dashboard-in-constructor\">\r\n    <div \r\n    className=\"constructor-help-text\" \r\n    style={{\r\n        disabled: true, \r\n        }}>\r\n        <p>Choose site and parameter to add parameter element.</p>\r\n        <p>Press \"Add widget\" button to add widget element.</p>\r\n        <p>To move parameter element hold mouse button and drag.</p>\r\n        <p>To move widget element hold mouse button on top side and drag.</p>\r\n        <p>To scale widget element use botoom and right side or bottom-right corner.</p>\r\n        <p>Saved dashboards are in menu list.</p>\r\n    </div>\r\n        \r\n    {newDashboard.map((elem, id) => {\r\n        if (elem.delete) {\r\n            return null\r\n        }\r\n        if (elem.element.type === 'widget'){\r\n            return (\r\n                <WidgetFrame\r\n                key={id}\r\n                id={id}\r\n                setTargetWidget={setTargetWidget}\r\n                size={elem.element.size}\r\n                deleteElement={deleteElement}\r\n                clearWidgetSize={clearWidgetSize}>\r\n                    <div>Some content....</div>\r\n                </WidgetFrame>\r\n            )\r\n        }\r\n        return (\r\n            <ConstructorElement\r\n            element={elem}\r\n            setMouseCoordinate={setMouseCoordinate}\r\n            setNewElement={setNewElement}\r\n            deleteElement={deleteElement}\r\n            newDashboard={newDashboard}\r\n            editElement={editElement}\r\n            instDataObject={instDataObject}\r\n            id={id}\r\n            key={id} />\r\n            \r\n        \r\n        )\r\n    })}\r\n</div>\r\n)};\r\n","import { handleActions, createAction} from \"redux-actions\";\r\n\r\n\r\nconst SET_DASHBOARD_ELEMENT = 'NEW_DASHBOARD/SET_DASHBOARD_ELEMENT';\r\nconst SET_DASHBOARD = 'NEW_DASHBOARD/SET_DASHBOARD';\r\nconst EDIT_DASHBOARD_ELEMENT = 'NEW_DASHBOARD/EDIT_DASHBOARD_ELEMENT';\r\nconst DELETE_DASHBOARD_ELEMENT = 'NEW_DASHBOARD/DELETE_DASHBOARD_ELEMENT';\r\nconst CLEAR_DASHBOARD = 'NEW_DASHBOARD/CLEAR_DASHBOARD';\r\n\r\nconst REDUCER_NAME = 'newDashboard';\r\n\r\nexport const setElemToNewDashboard = createAction(SET_DASHBOARD_ELEMENT);\r\nexport const setNewDashboard = createAction(SET_DASHBOARD);\r\nexport const editElemInNewDashboard = createAction(EDIT_DASHBOARD_ELEMENT);\r\nexport const deleteElemInNewDashboard = createAction(DELETE_DASHBOARD_ELEMENT);\r\nexport const clearNewDashboard = createAction(CLEAR_DASHBOARD);\r\n\r\nconst initialState = []\r\n\r\nexport default handleActions({\r\n    [setElemToNewDashboard]: (state, { payload }) => [...state, payload],\r\n    [setNewDashboard]: (state, { payload }) => [...payload],\r\n    [clearNewDashboard]: (state, { payload }) => initialState,\r\n    [editElemInNewDashboard]: (state, { payload }) => {\r\n        let newState = [...state];\r\n        newState[payload.id].element = { ...state[payload.id].element, ...payload.element }\r\n        return newState;\r\n    },\r\n    [deleteElemInNewDashboard]: (state, { payload }) => {\r\n        let newState = [...state];\r\n        newState[payload].delete = true;\r\n        return newState;\r\n    },\r\n}, initialState);\r\n\r\nexport const newDashboardSelector = state => state[REDUCER_NAME];\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { mouseCoordSelector, setCoord } from \"../reducers/mouseCoordinates\";\r\nimport { newElementSelector, clearElement, initialState as newElementInitialState } from \"../reducers/newDashboardElement\";\r\nimport { setElemToNewDashboard } from \"../reducers/newDashboard\";\r\n\r\n\r\n\r\nfunction LevitateElement({ newElement, coord, setToNewDashboard, clearElement, setMouseCoordinate }) {\r\n    if (!coord.in && !coord.dragX && !coord.dragY) {\r\n        return null;\r\n    }\r\n    if (coord.Y < 0) {\r\n        return null;\r\n    }\r\n    if (newElement === newElementInitialState) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div\r\n        className=\"levitate-element-div\"\r\n        style={{\r\n            position: 'absolute', \r\n            left: `${coord.X - coord.dragX}px`, \r\n            top: `${coord.Y - coord.dragY}px`,\r\n            }}\r\n            onMouseUp={(ev) => {\r\n                if ( newElement.idSite !== newElementInitialState.idSite \r\n                    && newElement.param !== newElementInitialState.param ) {\r\n                    setToNewDashboard({element: newElement, X: coord.X - coord.dragX, Y: coord.Y - coord.dragY});\r\n                    clearElement();\r\n                }\r\n                setMouseCoordinate({ dragX: 0, dragY: 0 });\r\n            }} >\r\n                {newElement.name || \"choose monitor\"} : {newElement.value || \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass ConstructorField extends React.Component {\r\n    componentDidUpdate(){\r\n        // console.log(\"--- ConsructorField did update ---\");\r\n    }\r\n    render(){\r\n        const { setMouseCoordinate, coord, newElement, setToNewDashboard, clearElement } = this.props;\r\n        return (\r\n            <div \r\n            className=\"constructor-field\"\r\n            style={{position: 'absolute', \r\n                        top: '0',\r\n                        bottom: '0',\r\n                        width: '100%', \r\n                        }} \r\n            onMouseMove={(ev) => {\r\n                setMouseCoordinate({ \r\n                    in: true,\r\n                    X: ev.clientX - ev.currentTarget.getBoundingClientRect().left,\r\n                    Y: ev.clientY - ev.currentTarget.getBoundingClientRect().top});\r\n                }\r\n            }\r\n            onMouseEnter={(ev) => {\r\n                setMouseCoordinate({ in: true });\r\n            }}\r\n            onMouseLeave={(ev) => {\r\n                setMouseCoordinate({ \r\n                    in: false, \r\n                    X: ev.clientX, \r\n                    Y: ev.clientY - ev.currentTarget.getBoundingClientRect().top});\r\n            }}>\r\n                <LevitateElement\r\n                setMouseCoordinate={setMouseCoordinate}\r\n                coord={coord}\r\n                newElement={newElement}\r\n                setToNewDashboard={setToNewDashboard}\r\n                clearElement={clearElement} />    \r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nConstructorField.propTypes = {\r\n    coord: PropTypes.object,\r\n    setMouseCoordinate:PropTypes.func,\r\n    newElement: PropTypes.object,\r\n    setToNewDashboard: PropTypes.func,\r\n    clearElement: PropTypes.func,\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    coord: mouseCoordSelector(state),\r\n    newElement: newElementSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setMouseCoordinate: setCoord,\r\n    setToNewDashboard: setElemToNewDashboard,\r\n    clearElement: clearElement,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConstructorField);\r\n\r\n","import { handleActions, createAction } from \"redux-actions\";\r\n\r\nexport const REDUCER_NAME = \"currentWidgetSize\";\r\n\r\nconst SET_CURRENT_WIDGET_SIZE = \"CURRENT_WIDGET_SIZE/SET_SIZE\";\r\nconst CLEAR_CURRENT_WIDGET_SIZE = \"CURRENT_WIDGET_SIZE/CLEAR_SIZE\";\r\n\r\nexport const setWidgetSize = createAction(SET_CURRENT_WIDGET_SIZE);\r\nexport const clearWidgetSize = createAction(CLEAR_CURRENT_WIDGET_SIZE);\r\n\r\nconst initialState = {X: -100, Y: 0, W: 50, H: 50, resizeX: false, resizeY: false, move: false};\r\n\r\nexport default handleActions({\r\n    [setWidgetSize]: (state, { payload }) => ({ ...state, ...payload }),\r\n    [clearWidgetSize]: (state, { payload }) => initialState,\r\n}, initialState);\r\n\r\nexport const currentWidgetSizeSelector = state => state[REDUCER_NAME];\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { REDUCER_NAME as currentWidgetSize, setWidgetSize} from \"../reducers/currentWidgetSize\"\r\nimport { editElemInNewDashboard } from \"../reducers/newDashboard\";\r\n\r\n\r\n\r\nexport default function WidgetFrame(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const size = useSelector(state => state[currentWidgetSize]);\r\n\r\n    const saveToNewDashboard = () => {\r\n        dispatch(editElemInNewDashboard({\r\n            id: size.id,\r\n            element: {\r\n                size: {\r\n                    X: size.X,\r\n                    Y: size.Y,\r\n                    H: size.H,\r\n                    W: size.W,\r\n                }\r\n            }\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div \r\n        className='widget-size-outer-div'\r\n        style={{\r\n            position: 'absolute', \r\n            left: size.X,\r\n            top: size.Y,\r\n            width: `${size.W}px`,\r\n            height:`${size.H}px`,\r\n            borderWidth: '1px',\r\n            borderStyle: 'solid',\r\n            borderColor: 'rgb(0,0,0)',\r\n        }}>\r\n            {props.children}\r\n            <div \r\n            className='top-move-div'\r\n            style={{\r\n                position: 'absolute',\r\n                right: 0,\r\n                top: size.move? '-50px': '0px',\r\n                height: size.move? '100px': '24px',\r\n                width: '100%',\r\n                cursor: 'move',\r\n            }}\r\n            onMouseMove={(ev) => {\r\n                ev.preventDefault();\r\n                // console.log('=== mouse move ===');\r\n                if (size.move) {\r\n                    // console.log(ev.clientX,'  =====  ',size.dX, '  ====  ', size.X)\r\n                    // console.log(document.getElementsByClassName('constructor-box')[0].offsetTop);\r\n                    const X = ev.clientX - size.dX - size.left;\r\n                    const Y = ev.clientY - size.dY - size.top;\r\n                    dispatch(setWidgetSize({ X, Y }));\r\n                }\r\n            }}\r\n            onMouseDown={(ev) => {\r\n                // console.log('=== mouse down ===');\r\n                dispatch(setWidgetSize({ \r\n                    move: true,\r\n                    dX: ev.clientX - ev.currentTarget.parentElement.getBoundingClientRect().left,\r\n                    dY: ev.clientY - ev.currentTarget.parentElement.getBoundingClientRect().top,\r\n                 }));\r\n            }}\r\n            onMouseUp ={(ev) => {\r\n                // console.log('=== mouse up ===');\r\n                dispatch(setWidgetSize({ \r\n                    move: false,\r\n                    dY: 0,\r\n                    dX:0\r\n                 }));\r\n                 saveToNewDashboard();\r\n            }}\r\n            onMouseLeave={(ev) => {\r\n                // console.log('=== mouse leave ===');\r\n                dispatch(setWidgetSize({ \r\n                    move: false,\r\n                    dY: 0,\r\n                    dX:0\r\n                }));\r\n                saveToNewDashboard();\r\n            }}>\r\n                <div\r\n                className='top-widget-div'\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: size.move? '50%': 0,\r\n                    width: '100%',\r\n                    height: '24px',\r\n                }}></div>\r\n            </div>\r\n            <div \r\n            className='right-scale-div'\r\n            style={{\r\n                position: 'absolute',\r\n                right: size.resizeX? '-50px': '-5px',\r\n                top: 0,\r\n                height: '100%',\r\n                width: size.resizeX? '100px': '10px',\r\n                cursor: 'ew-resize',\r\n            }}\r\n            onMouseMove={(ev) => {\r\n                ev.preventDefault();\r\n                // console.log('=== mouse move ===');\r\n                if (size.resizeX) {\r\n                    const currentSizeX = ev.clientX - ev.currentTarget.parentElement.getBoundingClientRect().left;\r\n                    dispatch(setWidgetSize({ W: currentSizeX }));\r\n                }\r\n            }}\r\n            onMouseDown={(ev) => {\r\n                // console.log('=== mouse down ===');\r\n                dispatch(setWidgetSize({ resizeX: true }));\r\n            }}\r\n            onMouseUp ={(ev) => {\r\n                // console.log('=== mouse up ===');\r\n                dispatch(setWidgetSize({ resizeX: false }));\r\n                saveToNewDashboard();\r\n            }}\r\n            onMouseLeave={(ev) => {\r\n                // console.log('=== mouse leave ===');\r\n                dispatch(setWidgetSize({ resizeX: false }));\r\n                saveToNewDashboard();\r\n            }}\r\n            ></div>\r\n            <div \r\n            className='bottom-scale-div'\r\n            style={{\r\n                position: 'absolute',\r\n                bottom: size.resizeY? '-50px': '-5px',\r\n                height: size.resizeY? '100px': '10px',\r\n                width: '100%',\r\n                cursor: 'ns-resize'\r\n            }}\r\n            onMouseMove={(ev) => {\r\n                ev.preventDefault();\r\n                // console.log('=== mouse move ===');\r\n                if (size.resizeY) {\r\n                    const currentSizeY = ev.clientY - ev.currentTarget.parentElement.getBoundingClientRect().top;\r\n                    dispatch(setWidgetSize({ H: currentSizeY }));\r\n                }\r\n            }}\r\n            onMouseDown={(ev) => {\r\n                // console.log('=== mouse down ===');\r\n                dispatch(setWidgetSize({ resizeY: true }));\r\n            }}\r\n            onMouseUp ={(ev) => {\r\n                // console.log('=== mouse up ===');\r\n                dispatch(setWidgetSize({ resizeY: false }));\r\n                saveToNewDashboard();\r\n            }}\r\n            onMouseLeave={(ev) => {\r\n                // console.log('=== mouse leave ===');\r\n                dispatch(setWidgetSize({ resizeY: false }));\r\n                saveToNewDashboard();\r\n            }}\r\n            ></div>\r\n            <div \r\n            className='bottom-right-corner-scale-div'\r\n            style={{\r\n                position: 'absolute',\r\n                right: (size.resizeY && size.resizeX)? '-50px': '-5px',\r\n                bottom: (size.resizeY && size.resizeX)? '-50px': '-5px',\r\n                height: (size.resizeY && size.resizeX)? '100px': '10px',\r\n                width: (size.resizeY && size.resizeX)? '100px': '10px',\r\n                cursor: 'nwse-resize'\r\n            }}\r\n            onMouseMove={(ev) => {\r\n                ev.preventDefault();\r\n                // console.log('=== mouse move ===');\r\n                if (size.resizeY && size.resizeX) {\r\n                    const currentSizeX = ev.clientX - ev.currentTarget.parentElement.getBoundingClientRect().left;\r\n                    const currentSizeY = ev.clientY - ev.currentTarget.parentElement.getBoundingClientRect().top;\r\n                    dispatch(setWidgetSize({ W: currentSizeX, H: currentSizeY }));\r\n                }\r\n            }}\r\n            onMouseDown={(ev) => {\r\n                // console.log('=== mouse down ===');\r\n                dispatch(setWidgetSize({ resizeX: true, resizeY: true }));\r\n            }}\r\n            onMouseUp ={(ev) => {\r\n                // console.log('=== mouse up ===');\r\n                dispatch(setWidgetSize({ resizeX: false, resizeY: false }));\r\n                saveToNewDashboard();\r\n            }}\r\n            onMouseLeave={(ev) => {\r\n                // console.log('=== mouse leave ===');\r\n                dispatch(setWidgetSize({ resizeX: false, resizeY: false }));\r\n                saveToNewDashboard();\r\n            }}>\r\n                <div\r\n                style={{\r\n                    position: 'absolute',\r\n                    bottom: '50%',\r\n                    right: '50%',\r\n                    height: '5px',\r\n                    width: '5px',\r\n                    background: 'linear-gradient(to bottom right, rgba(0,0,0,0) 50%, rgba(0,0,0,0) 5%, rgba(0,0,0,1) 45%'\r\n                }}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import { handleActions, createAction} from \"redux-actions\";\r\n\r\n\r\nexport const SET_DASHBOARD = 'DASHBOARDS/SET_DASHBOARD';\r\nconst LOAD_DASHBOARDS = 'DASHBOARDS/LOAD_DASHBOARDS';\r\nconst EDIT_DASHBOARD = 'DASHBOARDS/EDIT_DASHBOARD';\r\nconst DELETE_DASHBOARD = 'DASHBOARDS/DELETE_DASHBOARD';\r\n\r\nconst REDUCER_NAME = 'dashboards';\r\n\r\nexport const setDashboard = createAction(SET_DASHBOARD);\r\nexport const loadDashboards = createAction(LOAD_DASHBOARDS);\r\nexport const editDashboard = createAction(EDIT_DASHBOARD);\r\nexport const deleteDashboard = createAction(DELETE_DASHBOARD);\r\n\r\nconst initialState = [];\r\n\r\nexport default handleActions({\r\n    [setDashboard]: (state, { payload })  => {\r\n        let newState = [...state];\r\n        newState[payload.id] = { ...payload };\r\n        return newState;\r\n    },\r\n    [loadDashboards]: (state, { payload }) => [...payload],\r\n    [deleteDashboard]: (state, { payload }) => {\r\n        let newState = [...state];\r\n        newState[payload] = \"\";\r\n        return newState;\r\n    },\r\n}, initialState);\r\n\r\nexport const dashboardsSelector = state => state[REDUCER_NAME];\r\n","import { handleActions, createAction } from \"redux-actions\";\r\n\r\nconst REDUCER_NAME = \"dashboardName\";\r\n\r\nconst SET_NAME = \"DASHBOARD_NAME/SET_NAME\";\r\nconst CLEAR_NAME = \"DASHBOARD_NAME/CLEAR_NAME\";\r\n\r\nexport const setDashboardName = createAction(SET_NAME);\r\nexport const clearDashboardName = createAction(CLEAR_NAME);\r\n\r\nconst initialState = \"newDashboard\";\r\n\r\nexport default handleActions({\r\n    [setDashboardName]: (state, { payload }) => payload,\r\n    [clearDashboardName]: (state, { payload }) => initialState,\r\n}, initialState);\r\n\r\nexport const dashboardNameSelector = state => state[REDUCER_NAME];\r\n","import React, { createRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCoord } from \"../reducers/mouseCoordinates\";\r\nimport { isLoginSelector } from \"../reducers/loginVRM\";\r\nimport { Button, TextField, Select, OutlinedInput } from \"@material-ui/core\";\r\nimport { installationsSelector } from \"../reducers/installationsVRM\";\r\nimport { setElement, newElementSelector, clearElement, initialState as newElementInitialState } from \"../reducers/newDashboardElement\";\r\nimport DashboardInConstructor from \"../components/dashboardInConstructor\";\r\nimport ConstructorField from \"./constructorField\";\r\nimport WidgetFrameSize from \"./widgetSizeFrame\";\r\n\r\nimport { newDashboardSelector, setElemToNewDashboard, editElemInNewDashboard, deleteElemInNewDashboard, clearNewDashboard, setNewDashboard } from \"../reducers/newDashboard\";\r\nimport { dashboardsSelector, setDashboard } from \"../reducers/dashboards\";\r\nimport { dashboardNameSelector, setDashboardName } from \"../reducers/dashboardName\";\r\nimport { instDataObjectSelector } from \"../reducers/installationsObjectData\";\r\nimport queryString from \"query-string\";\r\nimport { setWidgetSize, clearWidgetSize } from \"../reducers/currentWidgetSize\";\r\n\r\n\r\n\r\nconst elementTargetParamSet = (instDataObject, idSite) => {\r\n    const dataArray = [];\r\n    for (let key in instDataObject[idSite]) {\r\n        dataArray.push({ \r\n            id: key, \r\n            name: instDataObject[idSite][key].name, \r\n            value: instDataObject[idSite][key].value })\r\n    }\r\n    return dataArray;  \r\n};\r\n\r\nfunction InitialWidget() {\r\n    return {element: {\r\n        type: 'widget',\r\n        size: {\r\n            X: 0,\r\n            Y: 0,\r\n            H: 100,\r\n            W: 200,\r\n        }\r\n    },\r\n    X: 0,\r\n    Y: 0};\r\n};\r\n\r\nclass Constructor extends React.Component {\r\n    // componentWillUpdate(){\r\n    //     console.log('===  constructor update ===');\r\n    // }\r\n    componentWillMount() {\r\n        this.urlParam = queryString.parse(this.props.location.search);\r\n        if (this.urlParam.id && this.props.dashboards[this.urlParam.id]) {\r\n            this.urlParam.valid = true;\r\n            this.props.setNewDashboard(this.props.dashboards[this.urlParam.id].dashboard);\r\n            this.props.setDashboardName(this.props.dashboards[this.urlParam.id].name);\r\n        } else {\r\n            this.props.setDashboardName(`Dashboard #${this.props.dashboards.length}`)\r\n            this.props.clearNewDashboard();\r\n        }\r\n      \r\n    };\r\n    componentDidMount(){\r\n        // console.log(\"--- constructor did mount  ---\");\r\n        if (this.props.isLogin.islogin) {\r\n            this.props.setWidgetSize({\r\n                left: this.upperDiv.current.offsetLeft,\r\n                top: this.upperDiv.current.offsetTop\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        // console.log(\"--- constructor did update  ---\");\r\n        if (this.props.isLogin.islogin) {\r\n            this.props.setWidgetSize({\r\n                left: this.upperDiv.current.offsetLeft,\r\n                top: this.upperDiv.current.offsetTop\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearNewDashboard();\r\n        this.props.clearWidgetSize();\r\n    };\r\n\r\n    upperDiv = createRef();\r\n\r\n\r\n    render(){\r\n    const { setMouseCoordinate, isLogin, installationResponce, \r\n        setNewElement, newElement, newDashboard, setToNewDashboard, \r\n        editElement, deleteElement, setDashboard, \r\n        dashboardName, setDashboardName, dashboards, \r\n        instDataObject, setTargetWidget, clearWidgetSize } = this.props;\r\n\r\n    const SiteSelect = () => {\r\n        return (\r\n            <Select \r\n                native \r\n                // color=\"primary\"\r\n                inputProps={{ style: { width: \"25\" } }} \r\n                input={<OutlinedInput />} \r\n                color=\"primary\" \r\n                name='site-select' \r\n                value={newElement.idSite} \r\n                onChange={({ target: { value } }) => {\r\n                if (value !== \"-\") {\r\n                    setNewElement({\r\n                        idSite: value\r\n                    });\r\n                }}}>\r\n                <option key=\"null\" value=\"-\" hidden>Choose site</option>\r\n                {installationResponce.data.records.map((site) => (\r\n                    <option key={site.idSite} value={site.idSite}>{site.name}</option>\r\n                    ))}\r\n            </Select>\r\n        );\r\n    };\r\n\r\n    const ParamSelect = () => (\r\n        <Select\r\n        native\r\n        // color=\"primary\"\r\n        inputProps={{style: {width: \"25\"}}}\r\n        input={<OutlinedInput />}\r\n        color=\"primary\" \r\n        name='param-select' \r\n        value={newElement.param} \r\n        onChange={({target: { value }}) => {\r\n            if (newElement.idSite !== newElementInitialState.idSite && value !== newElementInitialState.param) {\r\n                setNewElement({\r\n                    param: value, \r\n                    paramName: instDataObject[newElement.idSite][value].name,\r\n                    value: instDataObject[newElement.idSite][value].value,\r\n                    name: `${instDataObject[newElement.idSite].siteName} ${instDataObject[newElement.idSite][value].name}`\r\n                })\r\n            } \r\n        }}>\r\n            <option key=\"null\" value=\"-\" hidden>\r\n            {(newElement.idSite === newElementInitialState.idSite)? \r\n            \"Choose site first\" : \"Choose parameter\"}\r\n            </option>\r\n            \r\n            {elementTargetParamSet(instDataObject, newElement.idSite).map((e) => (\r\n                <option key={e.id} value={e.id}>{e.name}</option>))}\r\n        </Select>\r\n    );\r\n\r\n\r\n    if (!isLogin.islogin) {\r\n        return (\r\n            <div className=\"inner-warning\">Please login first!</div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n        className=\"constructor\" \r\n        >\r\n            <div\r\n            className=\"element-select-div\"\r\n            style={{\r\n                width: '100%',\r\n                }}>\r\n                {(installationResponce.data && installationResponce.data.records)\r\n                ? (<SiteSelect />)\r\n                : (\r\n                    <div>Loading...</div>\r\n                )}\r\n                 {(installationResponce.data && installationResponce.data.records)\r\n                ? (<ParamSelect />)\r\n                : null\r\n                }\r\n                \r\n                <OutlinedInput \r\n                inputProps={{style: {width: \"-webkit-fill-available\"}}}\r\n                // color=\"primary\"\r\n                placeholder={\"Edit parameter name\"}\r\n                value={newElement.name || ''}\r\n                onChange={({target: { value }}) => {\r\n                    setNewElement({ \r\n                        name: value\r\n                    })\r\n                }} />\r\n                <Button\r\n                variant={'outlined'}\r\n                color=\"secondary\"\r\n                style={{\r\n                    marginLeft: '10px'\r\n                }}\r\n                onClick={() => {\r\n                    setToNewDashboard(new InitialWidget());\r\n                }}\r\n                >Add widget</Button>\r\n            </div>\r\n            \r\n            <div\r\n            ref={this.upperDiv}\r\n            className=\"constructor-box\"\r\n            id=\"constructor-box\"\r\n            style={{\r\n                position: 'relative',\r\n                height: '100vh'\r\n                }}>\r\n                <ConstructorField />\r\n                <DashboardInConstructor \r\n                newDashboard={newDashboard}\r\n                editElement={editElement}\r\n                deleteElement={deleteElement}\r\n                setMouseCoordinate={setMouseCoordinate}\r\n                setNewElement={setNewElement}\r\n                instDataObject={instDataObject}\r\n                setTargetWidget={setTargetWidget}\r\n                clearWidgetSize={clearWidgetSize}\r\n                 />\r\n                <WidgetFrameSize>\r\n                </WidgetFrameSize>\r\n            </div>\r\n                           \r\n            <div style={{position: 'fixed', left: \"5px\", bottom: \"5px\", zIndex: \"100\"}}>\r\n                <TextField \r\n                color=\"primary\"\r\n                onChange={({ target: { value }}) => setDashboardName(value)}\r\n                value={dashboardName}\r\n                >\r\n                </TextField>\r\n                <Button\r\n                onClick={() => {\r\n                    // console.log(newDashboard);\r\n                    const filterNewDashboard = newDashboard.filter(\r\n                        elem => (elem.delete === false || elem.delete === undefined));\r\n                    setDashboard({ \r\n                        dashboard: filterNewDashboard, \r\n                        name: dashboardName, \r\n                        id: this.urlParam.valid ? this.urlParam.id : dashboards.length //dashboardId\r\n                    });\r\n                    alert(`Dashboard \"${dashboardName}\" saved. You can find it in main Menu.`)\r\n                }}\r\n                >Save dashboard</Button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n   };\r\n};\r\n\r\nConstructor.propTypes = {\r\n    setMouseCoordinate:PropTypes.func,\r\n    isLogin: PropTypes.object,\r\n    installationResponce: PropTypes.object,\r\n    setNewElement: PropTypes.func,\r\n    newElement: PropTypes.object,\r\n    newDashboard: PropTypes.array,\r\n    setToNewDashboard: PropTypes.func,\r\n    editElement: PropTypes.func,\r\n    deleteElement: PropTypes.func,\r\n    clearElement: PropTypes.func,\r\n    dashboards: PropTypes.array,\r\n    setDashboard: PropTypes.func,\r\n    dashboardName: PropTypes.string,\r\n    setDashboardName: PropTypes.func,\r\n    clearNewDashboard: PropTypes.func,\r\n    instDataObject: PropTypes.object,\r\n    setNewDashboard: PropTypes.func,\r\n    setWidgetSize: PropTypes.func,\r\n    setTargetWidget:PropTypes.func,\r\n    clearWidgetSize: PropTypes.func,\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isLogin: isLoginSelector(state),\r\n    installationResponce: installationsSelector(state),\r\n    newElement: newElementSelector(state),\r\n    newDashboard: newDashboardSelector(state),\r\n    dashboards: dashboardsSelector(state),\r\n    dashboardName: dashboardNameSelector(state),\r\n    instDataObject: instDataObjectSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setMouseCoordinate: setCoord,\r\n    setNewElement: setElement,\r\n    setToNewDashboard: setElemToNewDashboard,\r\n    editElement: editElemInNewDashboard,\r\n    deleteElement: deleteElemInNewDashboard,\r\n    clearElement: clearElement,\r\n    setDashboardName: setDashboardName,\r\n    setDashboard: setDashboard,\r\n    clearNewDashboard: clearNewDashboard,\r\n    setNewDashboard: setNewDashboard,\r\n    setWidgetSize: setWidgetSize,\r\n    setTargetWidget: setWidgetSize,\r\n    clearWidgetSize: clearWidgetSize,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Constructor);\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { dashboardsSelector, deleteDashboard } from \"../reducers/dashboards\";\r\nimport { installationsSelector, setInstallations } from \"../reducers/installationsVRM\";\r\nimport { updateTimerId, updateInstallations } from \"../models/apiVRM\";\r\nimport { isLoginSelector } from \"../reducers/loginVRM\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { setInstallationObjectData, instDataObjectSelector } from \"../reducers/installationsObjectData\";\r\nimport queryString from \"query-string\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n    componentWillUnmount(){\r\n        // console.log(updateTimerId);\r\n        clearInterval(updateTimerId);\r\n        clearTimeout(updateTimerId);\r\n    }\r\n    componentWillMount(){\r\n        this.props.updateInstallations(this.props.isLogin, 10000);\r\n    };\r\n    render() {\r\n        const { dashboards, deleteDashboard, instDataObject } = this.props;\r\n        const target = queryString.parse(this.props.location.search);\r\n        if (!target.id || !dashboards[target.id]) {\r\n            return (dashboards.map( (dashboard, id) => {\r\n                if (dashboard) {    \r\n                    return (\r\n                        <Link \r\n                        key={id}\r\n                        to={`/dashboards/?id=${dashboard.id}`} >\r\n                            <div>\r\n                                {dashboard.name}\r\n                            </div>\r\n                        </Link>     \r\n                    );\r\n                }\r\n                return null;\r\n            }));\r\n        }\r\n        return(\r\n            <div style={{position: \"static\"}}>\r\n                <div className=\"dashboard\" style={{position: \"relative\"}}>\r\n                {dashboards[target.id].dashboard.map((elem, id) => {\r\n                    if (elem === \"\") {\r\n                        return null\r\n                    }\r\n                    if (elem.element.type === 'widget'){\r\n                        return (\r\n                            <div\r\n                            key={id}\r\n                            id={id}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                left: elem.element.size.X,\r\n                                top: elem.element.size.Y,\r\n                                height: elem.element.size.H,\r\n                                width: elem.element.size.W,\r\n                                borderColor: 'rgba(0, 0, 0, 255)',\r\n                                borderWidth: '1px',\r\n                                borderStyle: 'solid',\r\n                            }}\r\n                            >\r\n                                <div>Some content....</div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <div\r\n                        key={id} \r\n                        style={{position: 'absolute', left: elem.X, top: elem.Y}} >\r\n                            {`${elem.element.name} : \r\n                            ${(instDataObject[elem.element.idSite] && instDataObject[elem.element.idSite][elem.element.param])\r\n                                ? instDataObject[elem.element.idSite][elem.element.param].value\r\n                                : \"---\"\r\n                            }`}\r\n                        </div>\r\n                    )})}  \r\n                </div>\r\n                <div style={{position: 'fixed', left: \"5px\", bottom: \"5px\"}}>\r\n                    <Button onClick={\r\n                        () => {\r\n                            this.props.history.push(`/newdashboard/?id=${target.id}`);\r\n                        }\r\n                    }>Change dashboard</Button>\r\n                    <Button onClick={() => {\r\n                        if (window.confirm(\"Do you really want to delete dashboard?\")) {\r\n                            deleteDashboard(target.id);\r\n                            this.props.history.push(\"/\");\r\n                        }\r\n                    }}>Delete dashboard</Button>\r\n                </div>\r\n            </div>  \r\n        );\r\n    };\r\n};\r\n\r\nDashboard.propTypes = {\r\n    dashboards: PropTypes.array,\r\n    installationsResponce: PropTypes.object,\r\n    isLogin: PropTypes.object,\r\n    setInstallations: PropTypes.func,\r\n    deleteDashboard: PropTypes.func,\r\n    setInstallationObjectData: PropTypes.func,\r\n    instDataObject: PropTypes.object,\r\n    updateInstallations: PropTypes.func,\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    dashboards: dashboardsSelector(state),\r\n    installationsResponce: installationsSelector(state),\r\n    isLogin: isLoginSelector(state),\r\n    instDataObject: instDataObjectSelector(state),\r\n});\r\n\r\nconst mapDispathToProps = {\r\n    setInstallations: setInstallations,\r\n    deleteDashboard: deleteDashboard,\r\n    setInstallationObjectData: setInstallationObjectData,\r\n    updateInstallations: updateInstallations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(Dashboard);\r\n","import { handleActions, createAction } from \"redux-actions\";\r\n\r\nconst REDUCER_NAME = \"hideMainMenu\";\r\n\r\nconst TOGGLE_MAIN_MENU = \"HIDE_MAIN_MENU/TOGGLE_MAIN_MENU\";\r\n\r\nexport const toggleMainMenu = createAction(TOGGLE_MAIN_MENU);\r\n\r\nconst initialState = true;\r\n\r\nexport default handleActions({\r\n    [toggleMainMenu]: (state, { payload }) => (state)? false : true,\r\n}, initialState);\r\n\r\nexport const hideMainMenuSelector = state => state[REDUCER_NAME]; \r\n   ","import {handleActions, createAction} from \"redux-actions\";\r\n\r\nexport const READ_LOCAL_STORAGE = \"READ_LOCAL_STORAGE/READ_LOCAL_STORAGE\";\r\n\r\n// const REDUCER_NAME = \"readLocalStorage\";\r\n\r\nexport const readLocalStorage = createAction(READ_LOCAL_STORAGE);\r\n\r\n// const initialState = '';\r\n\r\n// export default handleActions({\r\n//     [readLocalStorage] : (state, { payload }) => ({...payload}),\r\n// }, initialState);\r\n\r\n// export const readLocalStorageSelector = state => state[REDUCER_NAME];\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport './App.css';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport{ BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Login from \"./containers/login\";\r\nimport Installations from './containers/installations';\r\nimport { orange, lightBlue } from '@material-ui/core/colors';\r\nimport { setToken } from './reducers/loginVRM';\r\nimport { setInstallations } from './reducers/installationsVRM';\r\nimport { MainMenu } from './components/mainMenu';\r\nimport Constructor from \"./containers/constructor\";\r\nimport { dashboardsSelector, loadDashboards } from './reducers/dashboards';\r\nimport Dashboard from './containers/dashboard';\r\nimport { hideMainMenuSelector, toggleMainMenu } from './reducers/hideMainMenu';\r\nimport { setInstallationObjectData } from './reducers/installationsObjectData';\r\n// import { setDashboardId } from './reducers/dashboardId';\r\nimport { setDashboardName } from './reducers/dashboardName';\r\nimport { clearNewDashboard } from './reducers/newDashboard';\r\nimport { clearWidgetSize } from './reducers/currentWidgetSize';\r\nimport { readLocalStorage } from './reducers/readLocalSrorage';\r\n\r\n\r\n\r\nconst mainTheme = createMuiTheme({\r\n  palette: {\r\n    primary: lightBlue,\r\n    secondary: orange,\r\n  }\r\n});\r\n\r\nconst Page404 = () =>(\r\n  <div>\r\n    <h2>404 Error: Page not found</h2>\r\n    <Link to=\"/sites\">Go to main</Link>\r\n  </div>   \r\n  );\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n  componentWillMount(){\r\n    this.props.readLocalStorage(\"some\");\r\n\r\n    const rawloginVRM = localStorage.getItem(\"loginVRM\");\r\n    const rawInst = localStorage.getItem(\"installationsVRM\");\r\n    const rawDashboards = localStorage.getItem(\"dashboards\");\r\n    const rawinstallationsObjectData = localStorage.getItem(\"installationsObjectData\");\r\n    // console.log(\"-- write to store from Local Storage --\");\r\n    if (rawloginVRM) this.props.setIsLogin(JSON.parse(rawloginVRM))   \r\n    if (rawInst) this.props.setInst(JSON.parse(rawInst))\r\n    if (rawDashboards) this.props.setDashboards(JSON.parse(rawDashboards))\r\n    if (rawinstallationsObjectData) this.props.setInstallationObjectData(JSON.parse(rawinstallationsObjectData))\r\n  };\r\n\r\n  render(){\r\n    const { dashboards, hideMainMenu, toggleHide, setDashboardName, clearNewDashboard,\r\n      clearWidgetSize } = this.props;\r\n    return(\r\n      <ThemeProvider theme={mainTheme}>\r\n        <div\r\n        style={{\r\n          position: 'fixed',\r\n          top: '5px',\r\n          right: '10px',\r\n        }}\r\n        >\r\n          <h1>\r\n            PV monitor V1.0.0\r\n          </h1>\r\n        </div>\r\n      <div className=\"app\">\r\n        <BrowserRouter basename=\"/PVM\">\r\n          <div className=\"head\">\r\n            <MainMenu\r\n            dashboards={dashboards}\r\n            toggleHide={toggleHide}\r\n            hide={hideMainMenu}\r\n            // setDashboardId={setDashboardId}\r\n            setDashboardName={setDashboardName}\r\n            clearNewDashboard={clearNewDashboard}\r\n            clearWidgetSize={clearWidgetSize} />\r\n            <Login />\r\n          </div>\r\n          {/* <MainMenu\r\n          dashboards={dashboards}\r\n          toggleHide={toggleHide}\r\n          hide={hideMainMenu}\r\n          // setDashboardId={setDashboardId}\r\n          setDashboardName={setDashboardName}\r\n          clearNewDashboard={clearNewDashboard}\r\n          clearWidgetSize={clearWidgetSize} />\r\n          <Login /> */}\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Installations} />\r\n            <Route path=\"/sites\" component={Installations} />\r\n            <Route path=\"/dashboards\" component={Dashboard} />\r\n            <Route path=\"/newdashboard\" component={Constructor} />\r\n            <Route component={Page404} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n      </ThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  setIsLogin: PropTypes.func,\r\n  setInst: PropTypes.func,\r\n  dashboards: PropTypes.array,\r\n  setDashboards: PropTypes.func,\r\n  hideMainMenu: PropTypes.bool,\r\n  toggleHide: PropTypes.func,\r\n  setInstallationObjectData: PropTypes.func,\r\n  setDashboardName: PropTypes.func,\r\n  clearNewDashboard: PropTypes.func,\r\n  clearWidgetSize: PropTypes.func,\r\n  readLocalStorage: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchtoProps = {\r\n  setIsLogin: setToken,\r\n  setInst: setInstallations,\r\n  setDashboards: loadDashboards,\r\n  toggleHide: toggleMainMenu,\r\n  setInstallationObjectData: setInstallationObjectData,\r\n  setDashboardName: setDashboardName,\r\n  clearNewDashboard: clearNewDashboard,\r\n  clearWidgetSize: clearWidgetSize,\r\n  readLocalStorage: readLocalStorage,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  dashboards: dashboardsSelector(state),\r\n  hideMainMenu: hideMainMenuSelector(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchtoProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import loginVRM from \"./loginVRM\";\r\nimport installationsVRM from \"./installationsVRM\";\r\nimport selectedInst from \"./selectedInst\";\r\nimport installationsObjectData from \"./installationsObjectData\";\r\nimport mouseCoordinates from \"./mouseCoordinates\";\r\nimport newDashboardElement from \"./newDashboardElement\";\r\nimport newDashboard from \"./newDashboard\";\r\nimport dashboards from \"./dashboards\";\r\nimport dashboardName from \"./dashboardName\";\r\nimport hideMainMenu from \"./hideMainMenu\";\r\nimport currentWidgetSize from \"./currentWidgetSize\";\r\n// import readLocalStorage from \"./readLocalSrorage\";\r\n\r\n\r\nexport const reducers = {\r\n    loginVRM,\r\n    installationsVRM,\r\n    selectedInst,\r\n    installationsObjectData,\r\n    mouseCoordinates,\r\n    newDashboardElement,\r\n    newDashboard,\r\n    dashboards,\r\n    dashboardName,\r\n    hideMainMenu,\r\n    currentWidgetSize,\r\n    // readLocalStorage,\r\n};\r\n","import Thunk from \"redux-thunk\";\r\n// import { setCookie } from \"../containers/cookieGetSet\";\r\nimport { setLocalStorage } from \"../containers/localStorageReadWrite\";\r\nimport { SET_INSTALLATIONS } from \"../reducers/installationsVRM\";\r\nimport { SET_ISNTLOGIN, SET_TOKEN } from \"../reducers/loginVRM\";\r\nimport { SET_DASHBOARD } from \"../reducers/dashboards\";\r\nimport { SET_DATA } from \"../reducers/installationsObjectData\";\r\nimport { READ_LOCAL_STORAGE } from \"../reducers/readLocalSrorage\";\r\n\r\nconst filterToLocalStorageLog = {\r\n    [SET_ISNTLOGIN]: \"loginVRM\",\r\n    [SET_TOKEN]: \"loginVRM\", \r\n    [SET_INSTALLATIONS]: \"installationsVRM\", \r\n    [SET_DATA]: \"installationsObjectData\",\r\n    [SET_DASHBOARD]: \"dashboards\"\r\n};\r\n\r\n\r\nconst actionsToLocalStorage = [SET_INSTALLATIONS, SET_ISNTLOGIN, SET_TOKEN, SET_DATA, SET_DASHBOARD];\r\n\r\nexport const  logToLocalStorage = state => next => action => {\r\n    const returnValue = next(action);\r\n    // console.log(action);\r\n    const newState = state.getState();\r\n    if (actionsToLocalStorage.indexOf(action.type) !== -1) {\r\n        // console.log(\"-- log state to Local Storage -- \");\r\n        setLocalStorage(filterToLocalStorageLog[action.type], \r\n            JSON.stringify(newState[filterToLocalStorageLog[action.type]]));\r\n            // console.log(\"Data to log: \", newState[filterToLocalStorageLog[action.type]]);\r\n    }\r\n    \r\n    return returnValue;\r\n}\r\n\r\n\r\nexport const  takeFromLocalStorage = state => next => action => {\r\n    const returnValue = next(action);\r\n    // console.log(action);\r\n    // const newState = state.getState();\r\n    \r\n\r\n    if (action.type === READ_LOCAL_STORAGE) {\r\n        // console.log(action);\r\n    }\r\n    \r\n    return returnValue;\r\n}\r\n\r\n// const filterToCookieLog = [\"loginVRM\"];\r\n\r\n// export const  logToCookie = state => next => action => {\r\n//         const returnValue = next(action);\r\n//         const newState = state.getState();\r\n//         console.log('1: ', newState);\r\n//         // console.log('2: ', newState.loginVRM);\r\n//         filterToCookieLog.map((key) => {\r\n//             if (newState[key]) {\r\n//                 console.log(\"cookie tolog: \", newState[key]);\r\n//                 setCookie(key, JSON.stringify(newState[key]), {\"max-age\": 0});\r\n//             }\r\n//         })\r\n//         // console.log(document.cookie);\r\n//         return returnValue;\r\n// }\r\n\r\n\r\nconst createMiddlewares = () => [\r\n    // logToCookie,\r\n    Thunk,\r\n    logToLocalStorage,\r\n    takeFromLocalStorage\r\n]\r\n\r\nexport default createMiddlewares;","import React from \"react\";\r\n\r\nexport function setLocalStorage(key, value) {\r\n    const myStorage = localStorage;\r\n    myStorage.setItem(key, value);\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { configStore } from \"./store\";\r\nimport { reducers } from \"./reducers\"\r\nimport createMiddlewares from './store/middlewares';\r\n\r\n\r\nexport const store = configStore(reducers, createMiddlewares());\r\n\r\nconst RootComponent = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nReactDOM.render(<RootComponent />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore , combineReducers, applyMiddleware } from \"redux\";\r\n\r\nexport const configStore = (reducers, middlewares) => {\r\n   return createStore(combineReducers(reducers), {}, applyMiddleware(...middlewares));\r\n};"],"sourceRoot":""}